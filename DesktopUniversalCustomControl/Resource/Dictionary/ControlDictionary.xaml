<ResourceDictionary x:Class="DesktopUniversalCustomControl.Service.Common.DictionaryEvent"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style x:Key="button" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource foregroundColor}"></Setter>
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="loaded">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(ScaleTransform.ScaleX)" Storyboard.TargetName="TemplateRoot">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0"></EasingDoubleKeyFrame>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"></EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(ScaleTransform.ScaleY)" Storyboard.TargetName="TemplateRoot">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0"></EasingDoubleKeyFrame>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"></EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid x:Name="TemplateRoot" RenderTransformOrigin="0.5,0.5">
                        <Grid.RenderTransform>
                            <TransformGroup>
                                <TranslateTransform X="0" Y="0"></TranslateTransform>
                                <RotateTransform Angle="0"></RotateTransform>
                                <SkewTransform AngleX="0" AngleY="0"></SkewTransform>
                                <ScaleTransform ScaleX="1" ScaleY="1"></ScaleTransform>
                            </TransformGroup>
                        </Grid.RenderTransform>
                        <AdornerDecorator CacheMode="{Binding RelativeSource={RelativeSource Mode=Self}}">
                            <Grid>
                                <Border x:Name="border" CornerRadius="5" Background="{StaticResource backgroundColor}">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </Grid>
                        </AdornerDecorator>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Effect" Value="{StaticResource effect}"></Setter>
                            <Setter Property="Background" Value="{StaticResource backgroundColor}"></Setter>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter Property="Effect" Value="{StaticResource effect}"></Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="defaultStoryboardLoaed" Storyboard="{StaticResource loaded}"></BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <RemoveStoryboard BeginStoryboardName="defaultStoryboardLoaed"></RemoveStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--ContentControl-->
    <!--<Style x:Key="contentControl" TargetType="{x:Type ContentControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContentControl}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                        --><!--MouseLeftButtonDown="MouseLeftButtonPoint" MouseLeftButtonUp="MouseLeftButtonPointClear"--><!--
                        <Grid>
                            <ContentPresenter />
                            <Canvas x:Name="canvas"></Canvas>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <!-- Window-->
    <!--<Style x:Key="window" TargetType="Window">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Grid Margin="5">
                        <Rectangle Fill="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" RadiusX="10" RadiusY="10">
                            <Rectangle.Effect>
                                <DropShadowEffect BlurRadius="10" ShadowDepth="1" Direction="90" Color="Gray"></DropShadowEffect>
                            </Rectangle.Effect>
                        </Rectangle>
                        <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}"
                                                CornerRadius="10" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <ContentPresenter/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <!--ComboBox-->
    <Style x:Key="comboBox" TargetType="{x:Type ComboBox}">
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ComboBoxItem}">
                    <Setter Property="Height" Value="40"></Setter>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                                <Border x:Name="border">
                                    <StackPanel Orientation="Vertical">
                                        <ContentPresenter Content="{Binding Content, RelativeSource={RelativeSource Mode=TemplatedParent}}" VerticalAlignment="Center" />
                                        <Line Width="{TemplateBinding Width}" Stroke="White" StrokeThickness="1"/>
                                    </StackPanel>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter Property="Background" Value="Orange" TargetName="border"></Setter>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Border SnapsToDevicePixels="True" Background="{TemplateBinding Background}" CornerRadius="5">
                        <Grid x:Name="grid" SnapsToDevicePixels="True" >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="50" MaxWidth="50"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <ContentPresenter Content="{TemplateBinding SelectionBoxItem}" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="{TemplateBinding Padding}"
                                                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"></ContentPresenter>
                            <TextBox x:Name="PART_EditableTextBox" Visibility="Hidden" Grid.Column="0" Foreground="{TemplateBinding Foreground}" IsReadOnly="{TemplateBinding IsReadOnly}"></TextBox>
                            <ToggleButton x:Name="toggle" Grid.Column="1" Style="{StaticResource toggleButton}" Focusable="False"
                                                      IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"></ToggleButton>
                            <Popup Grid.Column="0" Grid.ColumnSpan="2" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True"
                                               PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                                <Border x:Name="dropDownBorder" BorderBrush="Orange" BorderThickness="1" Background="BlueViolet"
                                                    MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ElementName=grid,Path=ActualWidth}">
                                    <ScrollViewer x:Name="dropDownScrollViewer" CanContentScroll="True" SnapsToDevicePixels="True" 
                                                              VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
                                        <!--<StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" Background="WhiteSmoke"></StackPanel>-->
                                        <ItemsPresenter x:Name="itemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"></ItemsPresenter>
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>