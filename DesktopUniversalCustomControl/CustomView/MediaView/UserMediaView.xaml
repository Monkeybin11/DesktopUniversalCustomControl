<UserControl x:Class="DesktopUniversalCustomControl.CustomView.MediaView.UserMediaView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:component="clr-namespace:DesktopUniversalCustomControl.CustomComponent"
             xmlns:converter="clr-namespace:DesktopUniversalCustomControl.Service.Common"
             mc:Ignorable="d" 
             x:Name="userMedia"
             d:DesignHeight="450" d:DesignWidth="800"
             Loaded="UserControl_Loaded">

    <UserControl.Resources>
        <ResourceDictionary>
            <converter:DoubleToTimeSpan x:Key="DoubleToTimeSpan"/>
            <converter:SelectedItemToString x:Key="SelectedItemToString"/>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
            <SolidColorBrush x:Key="foreground" Color="YellowGreen"/>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid x:Name="ParentGrid" MouseLeave="ParentGrid_MouseLeave" MouseMove="ParentGrid_MouseMove" MouseLeftButtonDown="MediaElement_MouseLeftButtonUp">
        <Grid.Background>
            <VisualBrush>
                <VisualBrush.Visual>
                    <Image Source="/DesktopUniversalCustomControl;component/Resource/Images/background.png"></Image>
                </VisualBrush.Visual>
            </VisualBrush>
        </Grid.Background>
        <MediaElement x:Name="mediaElement" Volume="{Binding ElementName=volumeSlider,Path=Value}" LoadedBehavior="Manual"
                        MediaOpened="mediaElement_MediaOpened" MediaEnded="mediaElement_MediaEnded" MediaFailed="mediaElement_MediaFailed"
                        Source="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=component:MediaPlayerView},Path=Source}"/>
        <Grid x:Name="ControlGrid" Height="70" Width="{Binding ElementName=userMedia,Path=ActualWidth}" Visibility="{Binding IsControlOpen,Converter={StaticResource BooleanToVisibilityConverter}}"
                  VerticalAlignment="Bottom" Background="Transparent" MouseLeave="ControlGrid_MouseLeave">
            <component:CustomSlider x:Name="playSlider" Grid.ColumnSpan="2" Width="{Binding TemplatedParent}" ThumbSize="10" Height="10" SliderHeight="6" CornerRadius="1" Cursor="Hand"
                                        Thumb.DragStarted="playSlider_DragStarted" Thumb.DragCompleted="playSlider_DragCompleted" Foreground="GreenYellow" SliderBackground="#90D3D3D3"
                                        PreviewMouseLeftButtonDown="playSlider_PreviewMouseLeftButtonDown" PreviewMouseLeftButtonUp="playSlider_PreviewMouseLeftButtonUp"
                                        VerticalAlignment="Bottom" Minimum="0" Maximum="0" Value="0" Margin="0,0,0,50">
                <component:CustomSlider.Triggers>
                    <EventTrigger RoutedEvent="MouseMove">
                        <BeginStoryboard x:Name="sliderStoryBoard">
                            <Storyboard>
                                <DoubleAnimation From="10" To="15" Duration="0:0:0" Storyboard.TargetProperty="ThumbSize"></DoubleAnimation>
                                <DoubleAnimation From="6" To="10" Duration="0:0:0" Storyboard.TargetProperty="SliderHeight"></DoubleAnimation>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                    <EventTrigger RoutedEvent="MouseLeave">
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation From="15" To="10" Duration="0:0:0" Storyboard.TargetProperty="ThumbSize"></DoubleAnimation>
                                <DoubleAnimation From="10" To="6" Duration="0:0:0" Storyboard.TargetProperty="SliderHeight"></DoubleAnimation>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </component:CustomSlider.Triggers>
            </component:CustomSlider>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="10,0,0,10" Cursor="Hand">
                <component:CustomIconControl x:Name="last" Kind="Last" Click="Last_Click" Foreground="{StaticResource foreground}" ToolTip="上一集"/>
                <ToggleButton x:Name="play_pause" Click="PlayPause_Control">
                    <ToggleButton.Template>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                                <component:CustomIconControl x:Name="ctl" Kind="Play" Foreground="{StaticResource foreground}" ToolTip="播放"
                                                             IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent},Path=IsChecked,Mode=TwoWay}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True" SourceName="ctl">
                                    <Setter Property="Kind" Value="Pause" TargetName="ctl"></Setter>
                                    <Setter Property="ToolTip" Value="暂停" TargetName="ctl"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </ToggleButton.Template>
                </ToggleButton>
                <component:CustomIconControl x:Name="stop" Kind="Restart" Foreground="{StaticResource foreground}" Click="Restart_Click" Background="Transparent" ToolTip="重放"/>
                <component:CustomIconControl x:Name="next" Kind="Next" Click="Next_Click" Foreground="{StaticResource foreground}" ToolTip="下一集"/>
            </StackPanel>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Bottom" Grid.ColumnSpan="2" Margin="0,0,0,15">
                <TextBlock x:Name="currentTime" Text="{Binding ElementName=playSlider,Path=Value,Converter={StaticResource DoubleToTimeSpan},Mode=OneWay}" Foreground="{StaticResource foreground}" FontSize="16"></TextBlock>
                <TextBlock Text="/" Foreground="White" FontSize="16" Margin="5,0,5,0"></TextBlock>
                <TextBlock x:Name="totalTime" Text="{Binding ElementName=playSlider,Path=Maximum,Converter={StaticResource DoubleToTimeSpan},Mode=OneWay}" Foreground="{StaticResource foreground}" FontSize="16"></TextBlock>
            </StackPanel>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,20,10" Grid.Column="1" Cursor="Hand">
                <component:CustomIconControl x:Name="volume" Kind="VolumeMedium" Foreground="{StaticResource foreground}" Focusable="True" ToolTip="音量"
                                                MouseEnter="volume_MouseEnter" MouseLeave="volume_MouseLeave" Click="Volume_Click"/>
                <TextBlock x:Name="playSpeed" Text="{Binding ElementName=speedSlider,Path=SelectedItem,Converter={StaticResource SelectedItemToString}}" Padding="0,6,0,0" Focusable="True"
                                Width="45" Height="30" Foreground="{StaticResource foreground}" Background="Transparent" FontSize="15" VerticalAlignment="Center" HorizontalAlignment="Center"
                                MouseEnter="playSpeed_MouseEnter" MouseLeave="playSpeed_MouseLeave" ToolTip="倍速"/>
                <ToggleButton x:Name="fullScreent" Click="FullScreent_Click" Margin="5,0,0,0">
                    <ToggleButton.Template>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                                <component:CustomIconControl x:Name="ctl" Kind="Fullscreen" Foreground="{StaticResource foreground}" Background="Transparent" ToolTip="全屏"
                                                             IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent},Path=IsChecked,Mode=TwoWay}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter Property="Kind" Value="FullScreenExit" TargetName="ctl"></Setter>
                                    <Setter Property="ToolTip" Value="退出全屏" TargetName="ctl"></Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </ToggleButton.Template>
                </ToggleButton>
            </StackPanel>
            <Popup IsOpen="{Binding IsVolumeOpen}" StaysOpen="True" VerticalOffset="-5" AllowsTransparency="True" 
                        Placement="Top" PlacementTarget="{Binding ElementName=volume}" PopupAnimation="Slide">
                <Grid x:Name="volume_grid" Width="30" Height="240" Background="#909090" MouseLeave="VolumePopup_MouseLeave">
                    <StackPanel Orientation="Vertical">
                        <component:CustomTextControl x:Name="volume_value" Text="50" IsHitTestVisible="False"
                                                Foreground="White" FontSize="14" Background="Transparent" Width="30" HorizontalContentAlignment="Center" Margin="0,5,0,10"/>
                        <component:CustomSlider x:Name="volumeSlider" Minimum="0" Maximum="1" Value="0.5" SmallChange="1" ThumbSize="15" Height="200" Orientation="Vertical" Foreground="YellowGreen" SliderBackground="White" ValueChanged="VolumeSlider_ValueChanged"/>
                    </StackPanel>
                </Grid>
            </Popup>
            <Popup IsOpen="{Binding IsSpeedOpen}" StaysOpen="True" VerticalOffset="-5" AllowsTransparency="True" 
                                PopupAnimation="Slide" Placement="Top" PlacementTarget="{Binding ElementName=playSpeed}">
                <Grid x:Name="speed_grid" Width="45" Height="213" Background="#909090" MouseLeave="SpeedPopup_MouseLeave">
                    <ListBox x:Name="speedSlider" HorizontalContentAlignment="Center" IsSynchronizedWithCurrentItem="True" SelectionChanged="speedSelection_SelectionChanged"
                                SelectedIndex="2" BorderThickness="0" Background="#30000000" Foreground="White" 
                                ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Disabled">
                        <ListBoxItem Height="30">0.5X</ListBoxItem>
                        <ListBoxItem Height="30">0.75X</ListBoxItem>
                        <ListBoxItem Height="30">1.0X</ListBoxItem>
                        <ListBoxItem Height="30">1.25X</ListBoxItem>
                        <ListBoxItem Height="30">1.5X</ListBoxItem>
                        <ListBoxItem Height="30">1.75X</ListBoxItem>
                        <ListBoxItem Height="30">2.0X</ListBoxItem>
                        <ListBox.ItemContainerStyle>
                            <Style TargetType="{x:Type ListBoxItem}">
                                <Setter Property="BorderThickness" Value="0"></Setter>
                            </Style>
                        </ListBox.ItemContainerStyle>
                    </ListBox>
                </Grid>
            </Popup>
        </Grid>
    </Grid>
</UserControl>
