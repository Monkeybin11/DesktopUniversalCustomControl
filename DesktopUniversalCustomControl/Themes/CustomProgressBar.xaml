<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:convert="clr-namespace:DesktopUniversalCustomControl.ValueConverters"
                    xmlns:customCtl="clr-namespace:DesktopUniversalCustomControl.CustomComponent">
  
    <Style x:Key="ChanceCustomProgressBar" TargetType="{x:Type customCtl:CustomProgressBar}">
        <Setter Property="CornerRadius" Value="10"></Setter>
        <Setter Property="IsShowPercent" Value="True" />
        <Setter Property="IsIndeterminate" Value="False"></Setter>
        <Setter Property="TextColor" Value="#FFFFFF"></Setter>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryForegroundColor}"/>
        <Setter Property="Background" Value="{DynamicResource PrimaryBackgroundColor}"/>
        <Setter Property="Padding" Value="5,0"></Setter>
        <Setter Property="SnapsToDevicePixels" Value="True"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type customCtl:CustomProgressBar}">
                    <Grid x:Name="TemplateRoot" SnapsToDevicePixels="True">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Determinate"/>
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard x:Name="HorizontalStoryboard" RepeatBehavior="Forever">
                                        <PointAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)" Storyboard.TargetName="Animation">
                                            <EasingPointKeyFrame KeyTime="0:0:0" Value="0.0,0.5"/>
                                            <EasingPointKeyFrame KeyTime="0:0:2" Value="2.5,0.5"/>
                                        </PointAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Grid>
                            <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}"/>
                            <Border x:Name="PART_Track"/>
                            <Grid x:Name="PART_Indicator" ClipToBounds="True" HorizontalAlignment="Left">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition x:Name="width1"/>
                                    <ColumnDefinition x:Name="width2" Width="0"/>
                                </Grid.ColumnDefinitions>
                                <Grid x:Name="Animation" RenderTransformOrigin="0.5,0.5">
                                    <Grid.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleX="1" ScaleY="-1"/>
                                            <SkewTransform AngleX="0" AngleY="0"/>
                                            <RotateTransform Angle="180"/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Grid.RenderTransform>
                                    <Border Background="{TemplateBinding Foreground}" CornerRadius="{TemplateBinding CornerRadius}">
                                        <Viewbox HorizontalAlignment="Left" StretchDirection="DownOnly" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                                            <TextBlock Foreground="{TemplateBinding TextColor}" SnapsToDevicePixels="True" FontSize="{TemplateBinding FontSize}" 
                                                       VerticalAlignment="{TemplateBinding VerticalAlignment}" RenderTransformOrigin="0.5,0.5"
                                                       Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Value,StringFormat={}{0}%}"
                                                       Visibility="{Binding RelativeSource={x:Static RelativeSource.TemplatedParent},Path=IsShowPercent,Converter={convert:BooleanTrueToVisibilityConverter}}">
                                                <TextBlock.RenderTransform>
                                                    <TransformGroup>
                                                        <ScaleTransform ScaleX="-1" ScaleY="1"/>
                                                        <SkewTransform AngleX="0" AngleY="0"/>
                                                        <RotateTransform Angle="0"/>
                                                        <TranslateTransform/>
                                                    </TransformGroup>
                                                </TextBlock.RenderTransform>
                                            </TextBlock>
                                        </Viewbox>
                                    </Border>
                                </Grid>
                            </Grid>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="#C5C5C5" TargetName="border"></Setter>
                        </Trigger>
                        <Trigger Property="IsIndeterminate" Value="true">
                            <Setter Property="Width" Value="0.25*" TargetName="width1"></Setter>
                            <Setter Property="Width" Value="0.75*" TargetName="width2"></Setter>
                        </Trigger>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter Property="LayoutTransform" TargetName="TemplateRoot">
                                <Setter.Value>
                                    <RotateTransform Angle="-90"></RotateTransform>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type customCtl:CustomProgressBar}" TargetType="{x:Type customCtl:CustomProgressBar}" BasedOn="{StaticResource ChanceCustomProgressBar}">
        
    </Style>

</ResourceDictionary>