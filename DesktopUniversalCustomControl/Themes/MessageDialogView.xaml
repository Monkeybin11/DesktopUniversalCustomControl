<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:customCtl="clr-namespace:DesktopUniversalCustomControl.CustomComponent"
                    xmlns:msgDlg="clr-namespace:DesktopUniversalCustomControl.CustomView.MsgDlg"
                    xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors"
                    xmlns:converter="clr-namespace:DesktopUniversalCustomControl.ValueConverters">

    <converter:MessageDialogButtonToVisibilityConverter x:Key="MessageDialogButtonToVisibilityConverter"/>

    <Style x:Key="button" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=msgDlg:MessageDialog},Mode=TwoWay,Path=AdornerBackground}"/>
        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=msgDlg:MessageDialog},Mode=TwoWay,Path=AdornerForeground}"/>
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="loaded">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(ScaleTransform.ScaleX)" Storyboard.TargetName="TemplateRoot">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0"></EasingDoubleKeyFrame>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"></EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(ScaleTransform.ScaleY)" Storyboard.TargetName="TemplateRoot">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0"></EasingDoubleKeyFrame>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"></EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid x:Name="TemplateRoot" RenderTransformOrigin="0.5,0.5">
                        <Grid.RenderTransform>
                            <TransformGroup>
                                <TranslateTransform X="0" Y="0"></TranslateTransform>
                                <RotateTransform Angle="0"></RotateTransform>
                                <SkewTransform AngleX="0" AngleY="0"></SkewTransform>
                                <ScaleTransform ScaleX="1" ScaleY="1"></ScaleTransform>
                            </TransformGroup>
                        </Grid.RenderTransform>
                        <AdornerDecorator CacheMode="{Binding RelativeSource={RelativeSource Mode=Self}}">
                            <Grid>
                                <Border x:Name="border" CornerRadius="5" Background="{TemplateBinding Background}">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </Grid>
                        </AdornerDecorator>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="BlueViolet"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter Property="Effect" Value="{DynamicResource CustomShadowDepth1}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="defaultStoryboardLoaed" Storyboard="{StaticResource loaded}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <RemoveStoryboard BeginStoryboardName="defaultStoryboardLoaed"/>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type msgDlg:MessageDialog}">
        <Setter Property="Width" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
        <Setter Property="Height" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
        <Setter Property="Background" Value="White" />
        <Setter Property="AdornerBackground" Value="BlueViolet"/>
        <Setter Property="AdornerForeground" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type msgDlg:MessageDialog}">
                    <Border Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="45"/>
                                <RowDefinition />
                                <RowDefinition Height="60"/>
                            </Grid.RowDefinitions>

                            <Border Grid.Row="0" Background="{TemplateBinding Background}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="1*"></ColumnDefinition>
                                        <ColumnDefinition Width="8*"></ColumnDefinition>
                                        <ColumnDefinition Width="1*"></ColumnDefinition>
                                    </Grid.ColumnDefinitions>
                                    <customCtl:CustomIconControl Kind="Message" Foreground="{TemplateBinding AdornerBackground}" Background="{TemplateBinding AdornerForeground}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                    <TextBlock Grid.Column="1" Text="{Binding caption}" Foreground="{TemplateBinding AdornerBackground}" FontSize="16" FontFamily="正楷" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                    <customCtl:CustomIconControl Grid.Column="2" Kind="CloseCircle" ForceCursor="True" 
                                                                 Foreground="{TemplateBinding AdornerForeground}" Background="{TemplateBinding AdornerBackground}" 
                                                                 Width="30" Height="30" ToolTip="关闭" Cursor="Hand">
                                        <behaviors:Interaction.Triggers>
                                            <behaviors:EventTrigger EventName="Click">
                                                <behaviors:InvokeCommandAction Command="{Binding CloseWindowCommand}" CommandParameter="{Binding ElementName=msgWindow}"/>
                                            </behaviors:EventTrigger>
                                        </behaviors:Interaction.Triggers>
                                    </customCtl:CustomIconControl>
                                </Grid>
                            </Border>

                            <Grid Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="2*"></ColumnDefinition>
                                    <ColumnDefinition Width="1*" x:Name="icon"></ColumnDefinition>
                                    <ColumnDefinition Width="5*"></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <customCtl:CustomIconControl x:Name="hintText" Grid.Column="1" Kind="{Binding msgIcon}" Visibility="Collapsed"
                                                             Margin="0,0,15,0" IconSizePercent="1" 
                                                             Foreground="{TemplateBinding AdornerBackground}"
                                                             Background="{TemplateBinding AdornerForeground}"
                                                             VerticalAlignment="Center" HorizontalAlignment="Left"/>
                                <TextBlock Grid.Column="2" Text="{Binding indicateText}" TextWrapping="Wrap" VerticalAlignment="Center"
                                           Foreground="{TemplateBinding AdornerBackground}" FontSize="16"></TextBlock>
                            </Grid>
                            <Grid Grid.Row="2">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*" x:Name="single"></ColumnDefinition>
                                    <ColumnDefinition Width="0" x:Name="two"></ColumnDefinition>
                                    <ColumnDefinition Width="0" x:Name="more"></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <Button Grid.Column="0" Content="是(Y)" Width="80" Height="35" Style="{StaticResource button}" x:Name="yes"
                                        Command="{Binding YesCommand}" CommandParameter="{Binding ElementName=msgWindow}"
                                        Foreground="{TemplateBinding AdornerForeground}" Background="{TemplateBinding AdornerBackground}"/>
                                <Button Grid.Column="1" Content="否(N)" Width="80" Height="35" Style="{StaticResource button}" x:Name="no"
                                        Command="{Binding NoCommand}" CommandParameter="{Binding ElementName=msgWindow}"
                                        Foreground="{TemplateBinding AdornerForeground}" Background="{TemplateBinding AdornerBackground}"
                                        Visibility="{Binding MessageButtonResult,Converter={StaticResource MessageDialogButtonToVisibilityConverter},ConverterParameter=Two}"/>
                                <Button Grid.Column="2" Content="取消(C)" Width="80" Height="35" Style="{StaticResource button}" x:Name="cancel"
                                        Command="{Binding CancelCommand}" CommandParameter="{Binding ElementName=msgWindow}"
                                        Foreground="{TemplateBinding AdornerForeground}" Background="{TemplateBinding AdornerBackground}"
                                        Visibility="{Binding MessageButtonResult,Converter={StaticResource MessageDialogButtonToVisibilityConverter},ConverterParameter=TwoMore}"/>
                            </Grid>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="MessageButtonResult" Value="Single">
                            <Setter Property="Width" Value="0" TargetName="icon"/>
                        </Trigger>
                        <Trigger Property="MessageButtonResult" Value="Two">
                            <Setter Property="Width" Value="1*" TargetName="two"/>
                            <Setter Property="Visibility" Value="Visible" TargetName="hintText"/>
                        </Trigger>
                        <Trigger Property="MessageButtonResult" Value="More">
                            <Setter Property="Width" Value="1*" TargetName="two"/>
                            <Setter Property="Width" Value="1*" TargetName="more"/>
                            <Setter Property="Visibility" Value="Visible" TargetName="hintText"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>